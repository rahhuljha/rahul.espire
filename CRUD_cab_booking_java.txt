<<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>net.javaguides.hibernate</groupId>
        <artifactId>hibernate-tutorial</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <artifactId>jpa-crud-example</artifactId>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <dependencies>
        <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.13</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>5.3.7.Final</version>
        </dependency>
    </dependencies>
    <build>
        <sourceDirectory>src/main/java</sourceDirectory>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>














package net.javaguides.hibernate.entity;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

@Entity
@Table(name = "booking")
public class Book {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    private int bookid;

    @Column(name = "carname")
    private String carname;

    @Column(name = "car_type")
    private String car_type;

    @Column(name = "source")
    private String source;

 @Column(name = "destination")
    private String destination;


 @Column(name = "price")
    private Double price;
    public Student() {

    }

    public Student(String carname, String source, String destination,double price,String cartype) {
        this.carname = carname;
        this.source = source;
        this.destination= destination;
 this.price= price;
this.cartype= cartype;

    }

    public int getbookId() {
        return bookid;
    }

    public void setbookId(int bookid) {
        this.bookid = bookid;
    }

    public String getcarname() {
        return carname;
    }
 public String getcartpe() {
        return cartype;
    }

    public void setcartype(String cartype) {
        this.cartype = cartype;
    }

    public String getsource() {
        return source;
    }

    public void setsource(String source) {
        this.source = source;
    }

    public String getdestination() {
        return email;
    }

    public void setdestination(String destination) {
        this.destination = destination;
    }

 public String getprice() {
        return price;
    }

    public void setprice(String price) {
        this.price = price;
    }

    @Override
    public String toString() {
        return "Student [bookid=" + bookid + ", carname=" + carname + ", source=" + source + ", destination=" + destination",+ price=" + price"]";
    }
}





package net.javaguides.hibernate;

import javax.persistence.EntityManager;
import javax.persistence.EntityTransaction;

import net.javaguides.hibernate.entity.Student;
import net.javaguides.hibernate.util.JPAUtil;

/**
 *  JPA CRUD Operations
 * @author Ramesh Fadatare
 *
 */
public class CRUDOperations {
    public void insertEntity() {
        EntityManager entityManager = JPAUtil.getEntityManagerFactory().createEntityManager();
        EntityTransaction entityTransaction = entityManager.getTransaction();
        entityTransaction.begin();
        Book book = new Book("mycar", "minibus", "delhi","kanpootr",678.9);
        entityManager.persist(book);
        entityManager.getTransaction().commit();
        entityManager.close();
    }

    public void findEntity() {
        EntityManager entityManager = JPAUtil.getEntityManagerFactory().createEntityManager();
        entityManager.getTransaction().begin();
        Book book = entityManager.find(Book.class, 1);
        System.out.println("book id :: " + book.getbookId());
        System.out.println("car name :: " + book.carname());
        System.out.println("carsource :: " + book.getsource());
        System.out.println("destination :: " + book.getdestination());
 System.out.println("price :: " + book.getprice());
        entityManager.getTransaction().commit();
        entityManager.close();
    }

    public void updateEntity() {
        EntityManager entityManager = JPAUtil.getEntityManagerFactory().createEntityManager();
        entityManager.getTransaction().begin();

        Student student = entityManager.find(book.class, 1);
        System.out.println("book id :: " + book.getbookId());
        System.out.println("car name:: " + book.getcarname());
        System.out.println("source:: " + book.getsource());
        System.out.println("destination:: " + book.getdestination());

        // The entity object is physically updated in the database when the transaction
        // is committed
        student.setcarname("your car");
        student.source("muzaffarpur");
        entityManager.getTransaction().commit();
        entityManager.close();
    }

    public void removeEntity() {
        EntityManager entityManager = JPAUtil.getEntityManagerFactory().createEntityManager();
        entityManager.getTransaction().begin();

        Book book = entityManager.find(Book.class, 1);
        System.out.println("book id :: " + book.getbookid());
        System.out.println("car name :: " + book.getFirstName());
        System.out.println("source :: " + book.getsource());
        System.out.println("destination:: " + book.getdedtination());
        entityManager.remove(book);
        entityManager.getTransaction().commit();
        entityManager.close();
    }



<persistence
    xmlns="http://xmlns.jcp.org/xml/ns/persistence"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
             http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"
 version="2.1">
    <persistence-unit name="PERSISTENCE">
        <description> Hibernate JPA Configuration Example</description>
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        <class>net.javaguides.hibernate.entity.Student</class>
        <properties>
            <property name="javax.persistence.jdbc.driver"
    value="com.mysql.cj.jdbc.Driver" />
            <property name="javax.persistence.jdbc.url"
    value="jdbc:mysql://localhost:3306/hibernate_db" />
            <property name="javax.persistence.jdbc.user" value="root" />
            <property name="javax.persistence.jdbc.password"
    value="root" />
            <property name="hibernate.show_sql" value="true" />
            <property name="hibernate.hbm2ddl.auto" value="create-drop" />
        </properties>
    </persistence-unit>
</persistenc>


